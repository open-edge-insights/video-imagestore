// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ImageStore.proto

#include "ImageStore.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace ImageStore {
class ReadReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadReq>
      _instance;
} _ReadReq_default_instance_;
class ReadRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadResp>
      _instance;
} _ReadResp_default_instance_;
class StoreReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StoreReq>
      _instance;
} _StoreReq_default_instance_;
class StoreRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StoreResp>
      _instance;
} _StoreResp_default_instance_;
class RemoveReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveReq>
      _instance;
} _RemoveReq_default_instance_;
class RemoveRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveResp>
      _instance;
} _RemoveResp_default_instance_;
}  // namespace ImageStore
namespace protobuf_ImageStore_2eproto {
static void InitDefaultsReadReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ImageStore::_ReadReq_default_instance_;
    new (ptr) ::ImageStore::ReadReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ImageStore::ReadReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadReq}, {}};

static void InitDefaultsReadResp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ImageStore::_ReadResp_default_instance_;
    new (ptr) ::ImageStore::ReadResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ImageStore::ReadResp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadResp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadResp}, {}};

static void InitDefaultsStoreReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ImageStore::_StoreReq_default_instance_;
    new (ptr) ::ImageStore::StoreReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ImageStore::StoreReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StoreReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStoreReq}, {}};

static void InitDefaultsStoreResp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ImageStore::_StoreResp_default_instance_;
    new (ptr) ::ImageStore::StoreResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ImageStore::StoreResp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StoreResp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStoreResp}, {}};

static void InitDefaultsRemoveReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ImageStore::_RemoveReq_default_instance_;
    new (ptr) ::ImageStore::RemoveReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ImageStore::RemoveReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RemoveReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRemoveReq}, {}};

static void InitDefaultsRemoveResp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ImageStore::_RemoveResp_default_instance_;
    new (ptr) ::ImageStore::RemoveResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ImageStore::RemoveResp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RemoveResp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRemoveResp}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ReadReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadResp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StoreReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StoreResp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemoveReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemoveResp.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageStore::ReadReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageStore::ReadReq, readkeyname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageStore::ReadResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageStore::ReadResp, chunk_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageStore::StoreReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageStore::StoreReq, chunk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageStore::StoreReq, memorytype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageStore::StoreResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageStore::StoreResp, storekeyname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageStore::RemoveReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageStore::RemoveReq, remkeyname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageStore::RemoveResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ImageStore::ReadReq)},
  { 6, -1, sizeof(::ImageStore::ReadResp)},
  { 12, -1, sizeof(::ImageStore::StoreReq)},
  { 19, -1, sizeof(::ImageStore::StoreResp)},
  { 25, -1, sizeof(::ImageStore::RemoveReq)},
  { 31, -1, sizeof(::ImageStore::RemoveResp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ImageStore::_ReadReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ImageStore::_ReadResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ImageStore::_StoreReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ImageStore::_StoreResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ImageStore::_RemoveReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ImageStore::_RemoveResp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ImageStore.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020ImageStore.proto\022\nImageStore\"\036\n\007ReadRe"
      "q\022\023\n\013readKeyname\030\001 \001(\t\"\031\n\010ReadResp\022\r\n\005ch"
      "unk\030\001 \001(\014\"-\n\010StoreReq\022\r\n\005chunk\030\001 \001(\014\022\022\n\n"
      "memoryType\030\002 \001(\t\"!\n\tStoreResp\022\024\n\014storeKe"
      "yname\030\001 \001(\t\"\037\n\tRemoveReq\022\022\n\nremKeyname\030\001"
      " \001(\t\"\014\n\nRemoveResp2\260\001\n\002is\0225\n\004Read\022\023.Imag"
      "eStore.ReadReq\032\024.ImageStore.ReadResp\"\0000\001"
      "\0228\n\005Store\022\024.ImageStore.StoreReq\032\025.ImageS"
      "tore.StoreResp\"\000(\001\0229\n\006Remove\022\025.ImageStor"
      "e.RemoveReq\032\026.ImageStore.RemoveResp\"\000b\006p"
      "roto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 405);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ImageStore.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ImageStore_2eproto
namespace ImageStore {

// ===================================================================

void ReadReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadReq::kReadKeynameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadReq::ReadReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ImageStore_2eproto::scc_info_ReadReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ImageStore.ReadReq)
}
ReadReq::ReadReq(const ReadReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  readkeyname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.readkeyname().size() > 0) {
    readkeyname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.readkeyname_);
  }
  // @@protoc_insertion_point(copy_constructor:ImageStore.ReadReq)
}

void ReadReq::SharedCtor() {
  readkeyname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReadReq::~ReadReq() {
  // @@protoc_insertion_point(destructor:ImageStore.ReadReq)
  SharedDtor();
}

void ReadReq::SharedDtor() {
  readkeyname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadReq::descriptor() {
  ::protobuf_ImageStore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ImageStore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadReq& ReadReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ImageStore_2eproto::scc_info_ReadReq.base);
  return *internal_default_instance();
}


void ReadReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ImageStore.ReadReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  readkeyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ReadReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ImageStore.ReadReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string readKeyname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_readkeyname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->readkeyname().data(), static_cast<int>(this->readkeyname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ImageStore.ReadReq.readKeyname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ImageStore.ReadReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ImageStore.ReadReq)
  return false;
#undef DO_
}

void ReadReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ImageStore.ReadReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string readKeyname = 1;
  if (this->readkeyname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->readkeyname().data(), static_cast<int>(this->readkeyname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ImageStore.ReadReq.readKeyname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->readkeyname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ImageStore.ReadReq)
}

::google::protobuf::uint8* ReadReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ImageStore.ReadReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string readKeyname = 1;
  if (this->readkeyname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->readkeyname().data(), static_cast<int>(this->readkeyname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ImageStore.ReadReq.readKeyname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->readkeyname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ImageStore.ReadReq)
  return target;
}

size_t ReadReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ImageStore.ReadReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string readKeyname = 1;
  if (this->readkeyname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->readkeyname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ImageStore.ReadReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ImageStore.ReadReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ImageStore.ReadReq)
    MergeFrom(*source);
  }
}

void ReadReq::MergeFrom(const ReadReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ImageStore.ReadReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.readkeyname().size() > 0) {

    readkeyname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.readkeyname_);
  }
}

void ReadReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ImageStore.ReadReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadReq::CopyFrom(const ReadReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ImageStore.ReadReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadReq::IsInitialized() const {
  return true;
}

void ReadReq::Swap(ReadReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadReq::InternalSwap(ReadReq* other) {
  using std::swap;
  readkeyname_.Swap(&other->readkeyname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadReq::GetMetadata() const {
  protobuf_ImageStore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ImageStore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadResp::kChunkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadResp::ReadResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ImageStore_2eproto::scc_info_ReadResp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ImageStore.ReadResp)
}
ReadResp::ReadResp(const ReadResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chunk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chunk().size() > 0) {
    chunk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chunk_);
  }
  // @@protoc_insertion_point(copy_constructor:ImageStore.ReadResp)
}

void ReadResp::SharedCtor() {
  chunk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReadResp::~ReadResp() {
  // @@protoc_insertion_point(destructor:ImageStore.ReadResp)
  SharedDtor();
}

void ReadResp::SharedDtor() {
  chunk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadResp::descriptor() {
  ::protobuf_ImageStore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ImageStore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadResp& ReadResp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ImageStore_2eproto::scc_info_ReadResp.base);
  return *internal_default_instance();
}


void ReadResp::Clear() {
// @@protoc_insertion_point(message_clear_start:ImageStore.ReadResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chunk_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ReadResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ImageStore.ReadResp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes chunk = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_chunk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ImageStore.ReadResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ImageStore.ReadResp)
  return false;
#undef DO_
}

void ReadResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ImageStore.ReadResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes chunk = 1;
  if (this->chunk().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->chunk(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ImageStore.ReadResp)
}

::google::protobuf::uint8* ReadResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ImageStore.ReadResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes chunk = 1;
  if (this->chunk().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->chunk(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ImageStore.ReadResp)
  return target;
}

size_t ReadResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ImageStore.ReadResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes chunk = 1;
  if (this->chunk().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->chunk());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ImageStore.ReadResp)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ImageStore.ReadResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ImageStore.ReadResp)
    MergeFrom(*source);
  }
}

void ReadResp::MergeFrom(const ReadResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ImageStore.ReadResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chunk().size() > 0) {

    chunk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chunk_);
  }
}

void ReadResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ImageStore.ReadResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadResp::CopyFrom(const ReadResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ImageStore.ReadResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadResp::IsInitialized() const {
  return true;
}

void ReadResp::Swap(ReadResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadResp::InternalSwap(ReadResp* other) {
  using std::swap;
  chunk_.Swap(&other->chunk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadResp::GetMetadata() const {
  protobuf_ImageStore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ImageStore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StoreReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreReq::kChunkFieldNumber;
const int StoreReq::kMemoryTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreReq::StoreReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ImageStore_2eproto::scc_info_StoreReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ImageStore.StoreReq)
}
StoreReq::StoreReq(const StoreReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chunk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chunk().size() > 0) {
    chunk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chunk_);
  }
  memorytype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.memorytype().size() > 0) {
    memorytype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memorytype_);
  }
  // @@protoc_insertion_point(copy_constructor:ImageStore.StoreReq)
}

void StoreReq::SharedCtor() {
  chunk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memorytype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StoreReq::~StoreReq() {
  // @@protoc_insertion_point(destructor:ImageStore.StoreReq)
  SharedDtor();
}

void StoreReq::SharedDtor() {
  chunk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memorytype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StoreReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StoreReq::descriptor() {
  ::protobuf_ImageStore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ImageStore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoreReq& StoreReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ImageStore_2eproto::scc_info_StoreReq.base);
  return *internal_default_instance();
}


void StoreReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ImageStore.StoreReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chunk_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memorytype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool StoreReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ImageStore.StoreReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes chunk = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_chunk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string memoryType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_memorytype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->memorytype().data(), static_cast<int>(this->memorytype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ImageStore.StoreReq.memoryType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ImageStore.StoreReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ImageStore.StoreReq)
  return false;
#undef DO_
}

void StoreReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ImageStore.StoreReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes chunk = 1;
  if (this->chunk().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->chunk(), output);
  }

  // string memoryType = 2;
  if (this->memorytype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->memorytype().data(), static_cast<int>(this->memorytype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ImageStore.StoreReq.memoryType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->memorytype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ImageStore.StoreReq)
}

::google::protobuf::uint8* StoreReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ImageStore.StoreReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes chunk = 1;
  if (this->chunk().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->chunk(), target);
  }

  // string memoryType = 2;
  if (this->memorytype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->memorytype().data(), static_cast<int>(this->memorytype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ImageStore.StoreReq.memoryType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->memorytype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ImageStore.StoreReq)
  return target;
}

size_t StoreReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ImageStore.StoreReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes chunk = 1;
  if (this->chunk().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->chunk());
  }

  // string memoryType = 2;
  if (this->memorytype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->memorytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StoreReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ImageStore.StoreReq)
  GOOGLE_DCHECK_NE(&from, this);
  const StoreReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ImageStore.StoreReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ImageStore.StoreReq)
    MergeFrom(*source);
  }
}

void StoreReq::MergeFrom(const StoreReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ImageStore.StoreReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chunk().size() > 0) {

    chunk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chunk_);
  }
  if (from.memorytype().size() > 0) {

    memorytype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memorytype_);
  }
}

void StoreReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ImageStore.StoreReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreReq::CopyFrom(const StoreReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ImageStore.StoreReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreReq::IsInitialized() const {
  return true;
}

void StoreReq::Swap(StoreReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreReq::InternalSwap(StoreReq* other) {
  using std::swap;
  chunk_.Swap(&other->chunk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  memorytype_.Swap(&other->memorytype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StoreReq::GetMetadata() const {
  protobuf_ImageStore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ImageStore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StoreResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreResp::kStoreKeynameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreResp::StoreResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ImageStore_2eproto::scc_info_StoreResp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ImageStore.StoreResp)
}
StoreResp::StoreResp(const StoreResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  storekeyname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.storekeyname().size() > 0) {
    storekeyname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.storekeyname_);
  }
  // @@protoc_insertion_point(copy_constructor:ImageStore.StoreResp)
}

void StoreResp::SharedCtor() {
  storekeyname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StoreResp::~StoreResp() {
  // @@protoc_insertion_point(destructor:ImageStore.StoreResp)
  SharedDtor();
}

void StoreResp::SharedDtor() {
  storekeyname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StoreResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StoreResp::descriptor() {
  ::protobuf_ImageStore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ImageStore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoreResp& StoreResp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ImageStore_2eproto::scc_info_StoreResp.base);
  return *internal_default_instance();
}


void StoreResp::Clear() {
// @@protoc_insertion_point(message_clear_start:ImageStore.StoreResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  storekeyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool StoreResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ImageStore.StoreResp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string storeKeyname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_storekeyname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->storekeyname().data(), static_cast<int>(this->storekeyname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ImageStore.StoreResp.storeKeyname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ImageStore.StoreResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ImageStore.StoreResp)
  return false;
#undef DO_
}

void StoreResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ImageStore.StoreResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string storeKeyname = 1;
  if (this->storekeyname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->storekeyname().data(), static_cast<int>(this->storekeyname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ImageStore.StoreResp.storeKeyname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->storekeyname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ImageStore.StoreResp)
}

::google::protobuf::uint8* StoreResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ImageStore.StoreResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string storeKeyname = 1;
  if (this->storekeyname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->storekeyname().data(), static_cast<int>(this->storekeyname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ImageStore.StoreResp.storeKeyname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->storekeyname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ImageStore.StoreResp)
  return target;
}

size_t StoreResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ImageStore.StoreResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string storeKeyname = 1;
  if (this->storekeyname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->storekeyname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StoreResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ImageStore.StoreResp)
  GOOGLE_DCHECK_NE(&from, this);
  const StoreResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ImageStore.StoreResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ImageStore.StoreResp)
    MergeFrom(*source);
  }
}

void StoreResp::MergeFrom(const StoreResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ImageStore.StoreResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.storekeyname().size() > 0) {

    storekeyname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.storekeyname_);
  }
}

void StoreResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ImageStore.StoreResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreResp::CopyFrom(const StoreResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ImageStore.StoreResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreResp::IsInitialized() const {
  return true;
}

void StoreResp::Swap(StoreResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreResp::InternalSwap(StoreResp* other) {
  using std::swap;
  storekeyname_.Swap(&other->storekeyname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StoreResp::GetMetadata() const {
  protobuf_ImageStore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ImageStore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveReq::kRemKeynameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveReq::RemoveReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ImageStore_2eproto::scc_info_RemoveReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ImageStore.RemoveReq)
}
RemoveReq::RemoveReq(const RemoveReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  remkeyname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remkeyname().size() > 0) {
    remkeyname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remkeyname_);
  }
  // @@protoc_insertion_point(copy_constructor:ImageStore.RemoveReq)
}

void RemoveReq::SharedCtor() {
  remkeyname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RemoveReq::~RemoveReq() {
  // @@protoc_insertion_point(destructor:ImageStore.RemoveReq)
  SharedDtor();
}

void RemoveReq::SharedDtor() {
  remkeyname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RemoveReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RemoveReq::descriptor() {
  ::protobuf_ImageStore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ImageStore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveReq& RemoveReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ImageStore_2eproto::scc_info_RemoveReq.base);
  return *internal_default_instance();
}


void RemoveReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ImageStore.RemoveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  remkeyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RemoveReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ImageStore.RemoveReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string remKeyname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remkeyname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remkeyname().data(), static_cast<int>(this->remkeyname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ImageStore.RemoveReq.remKeyname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ImageStore.RemoveReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ImageStore.RemoveReq)
  return false;
#undef DO_
}

void RemoveReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ImageStore.RemoveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string remKeyname = 1;
  if (this->remkeyname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remkeyname().data(), static_cast<int>(this->remkeyname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ImageStore.RemoveReq.remKeyname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->remkeyname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ImageStore.RemoveReq)
}

::google::protobuf::uint8* RemoveReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ImageStore.RemoveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string remKeyname = 1;
  if (this->remkeyname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remkeyname().data(), static_cast<int>(this->remkeyname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ImageStore.RemoveReq.remKeyname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->remkeyname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ImageStore.RemoveReq)
  return target;
}

size_t RemoveReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ImageStore.RemoveReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string remKeyname = 1;
  if (this->remkeyname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remkeyname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ImageStore.RemoveReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ImageStore.RemoveReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ImageStore.RemoveReq)
    MergeFrom(*source);
  }
}

void RemoveReq::MergeFrom(const RemoveReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ImageStore.RemoveReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.remkeyname().size() > 0) {

    remkeyname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remkeyname_);
  }
}

void RemoveReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ImageStore.RemoveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveReq::CopyFrom(const RemoveReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ImageStore.RemoveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveReq::IsInitialized() const {
  return true;
}

void RemoveReq::Swap(RemoveReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveReq::InternalSwap(RemoveReq* other) {
  using std::swap;
  remkeyname_.Swap(&other->remkeyname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RemoveReq::GetMetadata() const {
  protobuf_ImageStore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ImageStore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveResp::RemoveResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ImageStore_2eproto::scc_info_RemoveResp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ImageStore.RemoveResp)
}
RemoveResp::RemoveResp(const RemoveResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ImageStore.RemoveResp)
}

void RemoveResp::SharedCtor() {
}

RemoveResp::~RemoveResp() {
  // @@protoc_insertion_point(destructor:ImageStore.RemoveResp)
  SharedDtor();
}

void RemoveResp::SharedDtor() {
}

void RemoveResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RemoveResp::descriptor() {
  ::protobuf_ImageStore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ImageStore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveResp& RemoveResp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ImageStore_2eproto::scc_info_RemoveResp.base);
  return *internal_default_instance();
}


void RemoveResp::Clear() {
// @@protoc_insertion_point(message_clear_start:ImageStore.RemoveResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool RemoveResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ImageStore.RemoveResp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ImageStore.RemoveResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ImageStore.RemoveResp)
  return false;
#undef DO_
}

void RemoveResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ImageStore.RemoveResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ImageStore.RemoveResp)
}

::google::protobuf::uint8* RemoveResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ImageStore.RemoveResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ImageStore.RemoveResp)
  return target;
}

size_t RemoveResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ImageStore.RemoveResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ImageStore.RemoveResp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ImageStore.RemoveResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ImageStore.RemoveResp)
    MergeFrom(*source);
  }
}

void RemoveResp::MergeFrom(const RemoveResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ImageStore.RemoveResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RemoveResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ImageStore.RemoveResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveResp::CopyFrom(const RemoveResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ImageStore.RemoveResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveResp::IsInitialized() const {
  return true;
}

void RemoveResp::Swap(RemoveResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveResp::InternalSwap(RemoveResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RemoveResp::GetMetadata() const {
  protobuf_ImageStore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ImageStore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ImageStore
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ImageStore::ReadReq* Arena::CreateMaybeMessage< ::ImageStore::ReadReq >(Arena* arena) {
  return Arena::CreateInternal< ::ImageStore::ReadReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ImageStore::ReadResp* Arena::CreateMaybeMessage< ::ImageStore::ReadResp >(Arena* arena) {
  return Arena::CreateInternal< ::ImageStore::ReadResp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ImageStore::StoreReq* Arena::CreateMaybeMessage< ::ImageStore::StoreReq >(Arena* arena) {
  return Arena::CreateInternal< ::ImageStore::StoreReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ImageStore::StoreResp* Arena::CreateMaybeMessage< ::ImageStore::StoreResp >(Arena* arena) {
  return Arena::CreateInternal< ::ImageStore::StoreResp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ImageStore::RemoveReq* Arena::CreateMaybeMessage< ::ImageStore::RemoveReq >(Arena* arena) {
  return Arena::CreateInternal< ::ImageStore::RemoveReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ImageStore::RemoveResp* Arena::CreateMaybeMessage< ::ImageStore::RemoveResp >(Arena* arena) {
  return Arena::CreateInternal< ::ImageStore::RemoveResp >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
